// <auto-generated />
using System;
using ASPNETCore_Practice.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ASPNETCore_Practice.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230919165320_AddTablesToDb")]
    partial class AddTablesToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<int>("FlightSeatPriceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FlightSeatPriceId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Passport")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Direction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DestinationIataCode")
                        .HasColumnType("integer");

                    b.Property<int>("OriginIataCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DestinationIataCode");

                    b.HasIndex("OriginIataCode");

                    b.ToTable("Direction");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FlightStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlightStatusId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.FlightSeatPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FlightId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightSeatPrice");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.FlightStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FlightStatus");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ArrivalTimeGMT")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DepartureTimeGMT")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DirectionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Airport", b =>
                {
                    b.HasOne("ASPNETCore_Practice.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Booking", b =>
                {
                    b.HasOne("ASPNETCore_Practice.Models.Domain.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNETCore_Practice.Models.Domain.FlightSeatPrice", "FlightSeatPrice")
                        .WithMany()
                        .HasForeignKey("FlightSeatPriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("FlightSeatPrice");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Client", b =>
                {
                    b.HasOne("ASPNETCore_Practice.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Direction", b =>
                {
                    b.HasOne("ASPNETCore_Practice.Models.Domain.Airport", "AirportDest")
                        .WithMany()
                        .HasForeignKey("DestinationIataCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNETCore_Practice.Models.Domain.Airport", "AirportOrig")
                        .WithMany()
                        .HasForeignKey("OriginIataCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirportDest");

                    b.Navigation("AirportOrig");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Flight", b =>
                {
                    b.HasOne("ASPNETCore_Practice.Models.Domain.FlightStatus", "FlightStatus")
                        .WithMany()
                        .HasForeignKey("FlightStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNETCore_Practice.Models.Domain.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightStatus");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.FlightSeatPrice", b =>
                {
                    b.HasOne("ASPNETCore_Practice.Models.Domain.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("ASPNETCore_Practice.Models.Domain.Schedule", b =>
                {
                    b.HasOne("ASPNETCore_Practice.Models.Domain.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });
#pragma warning restore 612, 618
        }
    }
}
